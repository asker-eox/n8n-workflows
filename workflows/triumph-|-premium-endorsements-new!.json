{
  "createdAt": "2025-07-17T06:44:46.082Z",
  "updatedAt": "2025-07-17T10:54:52.512Z",
  "id": "QV5iCtKnvjUGTM59",
  "name": "Triumph | Premium endorsements New!",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "apiurl",
              "value": "={{ $node[\"Instance API\"].json[\"apiurl\"] }}"
            },
            {
              "name": "redirecturl",
              "value": "={{ $node[\"Instance API\"].json[\"redirectURL\"] }}"
            },
            {
              "name": "appid",
              "value": "=700c32f5-0818-4689-ba38-6a43ec45d01c"
            },
            {
              "name": "accountId",
              "value": "={{$node[\"Instance API\"].json[\"apiurl\"].includes(\"triumph\")?\"b0923de7-0387-48ea-8f29-5d3704d96a46\":\"99b59168-ba47-46ce-8bc3-1bc16957e016\"}}"
            },
            {
              "name": "entityname",
              "value": "={{ $node[\"Webhook\"].json[\"body\"][\"endorsementtype\"] }}"
            }
          ]
        },
        "options": []
      },
      "id": "8335e089-be4e-49bd-8988-bbb325014013",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -340,
        -20
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$node[\"Set\"].json[\"apiurl\"]}}/account/{{$node[\"Set\"].json[\"accountId\"]}}/teams/list",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Generate Token\"].json[\"data\"][\"jwt\"] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "filter",
              "value": "=[{\"filter\":{\"logic\":\"or\",\"filters\":[{\"field\":\"name\",\"operator\":\"contains\",\"value\":\"TIUW\"},{\"field\":\"name\",\"operator\":\"contains\",\"value\":\"{{ $node[\"Get User Team\"].json[\"body\"][\"data\"][0][\"name\"] }}\"}]},\"sort\":[{\"dir\":\"asc\",\"field\":\"name\"}],\"take\":5,\"skip\":0}]"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "08ba2bd8-a555-474e-bf2d-6344b75feccc",
      "name": "GetTeamList",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -220,
        -620
      ]
    },
    {
      "parameters": {
        "jsCode": "\n// let teams=$('GetTeamList').all();\n// let teamlist=teams[0].json.body.data;\n// let team={};\n// let assigned_team=[];\n// teamlist.some(team1 => {\n//     team=team1;\n//     assigned_team.push(team.uuid);\n// });\n// //let assign_team= assigned_team.toString()\n// team['assigned_team']=JSON.stringify(assigned_team);\n\nlet formdetails = $('Webhook').all()[0].json.body;\nconsole.log(JSON.stringify(formdetails.assigned_team));\nif(formdetails.childid==\"\"){\n//formdetails['assigned_team']=JSON.stringify(assigned_team);\n  formdetails['assocId'] = formdetails.recordid;\n}\nformdetails['assigned_team']=JSON.stringify(formdetails.assigned_team);\n//}  \n//formdetails['endorsement_agent']=formdetails.userprofile.manager_name;\n//   formdetails['endorsement_cname']=formdetails.companyName;\n//   formdetails['previous_status']=\"Active\";\n// }else{\n//   let previous_status= $('Get main file details').all()[0].json.data.data.endtstatus\n//   console.log(previous_status)\n//   formdetails['previous_status']=previous_status;\n// }\n// delete formdetails.carrierSoftwaredata;\n// delete formdetails.formEntityName;\n// delete formdetails.formname;\n// delete formdetails.insuredAddress;\n// delete formdetails.phoneList;\n// delete formdetails.userprofile;\n// delete formdetails.usertype;\n// delete formdetails.uwStatus;\n// delete formdetails.status;\n// delete formdetails.countryList;\n// delete formdetails.dateFormats;\n// delete formdetails.areYouAnActiveTriumphBusinessCapitalClient;\n// delete formdetails.timezones;\n// switch(formdetails.endorsementtype) {\n//   case \"Driver\":\n//     formdetails['entity_name'] = 'tiAddRemoveDriver';\n//     if(formdetails.endtstpcondition == \"stpViolated\" && formdetails.privileges.TRIUMPH360_INSURED_READ === true){\n//         formdetails['endorsement_status']=\"Under Review\";\n//     }else if(formdetails.endtstpcondition == \"stpViolated\" && formdetails.privileges.TRIUMPH360_UW_READ === true && formdetails.endorsement_status == \"Approve\"){\n//         formdetails['endorsement_status']=\"Approved\";\n//         formdetails['endtstpcondition'] = \"\";\n//     }else if(formdetails.endtstpcondition == \"stpViolated\" && formdetails.privileges.TRIUMPH360_UW_READ === true && formdetails.endorsement_status == \"Reject\"){\n//         formdetails['endorsement_status']=\"Rejected\";\n//     }else if(formdetails.endtstpcondition == \"\" && formdetails.endorsement_status == \"\" && formdetails.privileges.TRIUMPH360_INSURED_READ === true){\n//         formdetails['endorsement_status']=\"Approved\";\n//     }\n    \n//     if(formdetails['childid'] == ''){\n//         formdetails['endtstatus']=\"Active\";\n//     }\n//     break;\n//   case \"Location\":\n//     formdetails['entity_name'] = 'tiAddLocation';\n//     formdetails['endorsement_status']=(formdetails.endorsement_status == \"\") ? \"Approved\" : formdetails.endorsement_status;\n//     if(formdetails['childid'] == ''){\n//       formdetails['endtstatus']=\"Active\";\n//     }\n//     formdetails['endtlocationtype'] = \"Garaging Address\";\n//     break;\n//   case \"Vehicle\":\n//     formdetails['entity_name'] = 'tiAddVehicle';\n//     formdetails['endorsement_status']=(formdetails.endorsement_status == \"\") ? \"Approved\" : formdetails.endorsement_status;   \n//     if(formdetails['childid'] == ''){\n//       formdetails['endtstatus']=\"Active\";\n//     }\n//     break;  \n//   default:\n//     formdetails['entity_name'] = 'tiAddRemoveDriver';\n//     formdetails['endorsement_status']=\"Approved\";\n// }\nreturn formdetails;\n"
      },
      "id": "323015e9-ad8e-4f1f-8655-7877514c18e3",
      "name": "Get TeamID",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        80,
        -620
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$node[\"Set\"].json[\"apiurl\"]}}/auth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "supportadmin"
            },
            {
              "name": "password",
              "value": "Welcome2eox!"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "f0eb1608-0e4c-42fe-a38e-1c4358374a34",
      "name": "Generate Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -140,
        -20
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$node[\"Set\"].json[\"apiurl\"]}}/team/user/{{ $node[\"Webhook\"].json[\"body\"][\"eduf\"][\"uuid\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Generate Token\"].json[\"data\"][\"jwt\"] }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "ce1a7365-3fad-4e43-a68f-dc100fe0d23b",
      "name": "Get User Team",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -420,
        -620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Webhook\"].json[\"body\"][\"childid\"] }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "3e215a76-fa5f-466d-940c-b1681fbf438c",
      "name": "Check for new record",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        380,
        -620
      ]
    },
    {
      "parameters": {
        "operation": "getTimeBetweenDates",
        "startDate": "={{ $node[\"Get effective date\"].json[\"endo_date\"] }}",
        "endDate": "={{ $node[\"Get effective date\"].json[\"today\"] }}",
        "options": []
      },
      "id": "bba8ab4c-ddc6-4c90-ada4-120ca9781f4d",
      "name": "Get difference of endo dates",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        660,
        -20
      ]
    },
    {
      "parameters": {
        "jsCode": "console.log($('Webhook').all()[0].json.body.endtdrivered !== undefined);\nlet getEffeciveDate = \"\";\nif($('Webhook').all()[0].json.body.endtvehicleed !== undefined){\n  getEffeciveDate = $('Webhook').all()[0].json.body.endtvehicleed;  \n}else if($('Webhook').all()[0].json.body.endtdrivered !== undefined){\n  getEffeciveDate = $('Webhook').all()[0].json.body.endtdrivered; \n}else if($('Webhook').all()[0].json.body.endtlocationed !== undefined){\n  getEffeciveDate = $('Webhook').all()[0].json.body.endtlocationed; \n}\nconsole.log(getEffeciveDate);\n\nvar today = $('Get todays date').all()[0].json.today;\n//var today = \"05/18/2024\";\n\nlet output={\"today\":today,\"endo_date\":getEffeciveDate};\nreturn output;"
      },
      "id": "68c14551-0024-495d-aae0-728a38181a03",
      "name": "Get effective date",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        460,
        -20
      ]
    },
    {
      "parameters": {
        "workflowId": "529",
        "options": []
      },
      "id": "218f13d8-b6d5-4405-9b43-4836363e1c94",
      "name": "Get todays date",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        260,
        -20
      ]
    },
    {
      "parameters": {
        "workflowId": "534",
        "options": []
      },
      "id": "b4a19928-936a-4795-b96e-e4ad8df172f3",
      "name": "Instance API",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -520,
        -20
      ]
    },
    {
      "parameters": {
        "workflowId": "HdscPsJrYNudhs7D",
        "options": []
      },
      "id": "1991db86-8629-485c-92b0-c92dad3d3418",
      "name": "Emails",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -680,
        -580
      ]
    },
    {
      "parameters": {
        "jsCode": "let formdetails = $('Webhook1').all()[0].json.body\nlet teamId = $('Webhook1').all()[0].json.body.userprofile.teams[0].uuid;\n\ndelete formdetails.countryList;\ndelete formdetails.privileges;\ndelete formdetails.userprofile;\ndelete formdetails.phoneList;\ndelete formdetails.dateFormats;\ndelete formdetails.timezones;\n\n\nconsole.log(formdetails)\n\nlet output = formdetails;\noutput['appId'] = \"700c32f5-0818-4689-ba38-6a43ec45d01c\";\noutput['is_data'] = \"true\";\noutput['assocId'] = formdetails.row_uuid;\noutput['effectiveDate'] = formdetails.effectiveDate;\noutput['selectPolicyS'] = formdetails.selectPolicyS;\noutput['companyName'] = formdetails.companyName;\noutput['assigned_team'] = [teamId];\n//endorsementType  additionalInsuredName\noutput['endorsementType'] = formdetails.endorsementType;\noutput['additionalInsuredName'] = formdetails.additionalInsuredName;\noutput[\"commands\"]= [{\n\"command\": \"fileSave\",\n\"entity_name\": \"tiNonPremiumEndo\"\n}];\n\n\n\nconsole.log(\"ou\",output);\nreturn {output:(output)};"
      },
      "id": "06a5175f-3361-411d-a514-f6ef4e2d6a22",
      "name": "FileSave Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        700,
        -580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e2896cdc-b83e-40aa-aeee-a3e459698acf",
              "leftValue": "={{ $('Get difference of endo dates').item.json[\"timeDifference\"][\"days\"] }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": []
      },
      "id": "b4a48f3a-7d3a-46e5-b2dd-446e74826f67",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        -20
      ]
    },
    {
      "parameters": {
        "url": "={{ $node[\"Set\"].json[\"apiurl\"] }}/app/700c32f5-0818-4689-ba38-6a43ec45d01c/file/search/entity/tiPremiumEndo/assoc/{{ $('Webhook').item.json[\"body\"][\"row_uuid\"]}}?filter=  [{\"filter\":{\"logic\":\"AND\",\"filters\":[{\"field\":\"endorsementtype\",\"operator\":\"eq\",\"value\":\"Vehicle\"},{\"field\":\"endtstatus\",\"operator\":\"eq\",\"value\":\"Active\"}]},\"skip\":0,\"take\":0}]",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Generate Token\"].json[\"data\"][\"jwt\"] }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": []
          }
        }
      },
      "id": "ba77a27f-367d-4674-ba33-f934ce3ead78",
      "name": "Get Total vehicle",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1140,
        -260
      ]
    },
    {
      "parameters": {
        "url": "={{ $node[\"Set\"].json[\"fileURL\"] }}/files/ClearforkRater.xlsm",
        "options": []
      },
      "id": "919a8c37-1df3-4ad4-9fe1-57e684ceb37f",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1780,
        -260
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://eox.ai:8888",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "sheetnames",
              "value": "[\"UMPIP Coverage options by state\"]"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": []
          }
        }
      },
      "id": "9eee3648-d181-4f5d-9056-90c4b2fa2add",
      "name": "ReadCoverage",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1960,
        -260
      ]
    },
    {
      "parameters": {
        "jsCode": "let inputdata=$('Get main file details').all()[0].json.data.data;\nlet totalvehicle=$('Vehicle Count').all()[0].json.totalVeh;\nconsole.log(totalvehicle);\nvar covdata = inputdata.coverageData1;\nif(typeof covdata == 'string'){\ncovdata=JSON.parse(covdata);\n}\nconst d = new Date();\nlet year = d.getFullYear();\ninputdata.CurrentYear = year;\n\nif(typeof inputdata.numberOfYearsInBusinessQQ == 'string' ){\n  if(inputdata.numberOfYearsInBusinessQQ.includes('New Venture')){\n    inputdata.numberOfYearsInBusinessQQ = '0';\n  }\n  inputdata.numberOfYearsInBusinessQQ = inputdata.numberOfYearsInBusinessQQ.trim();\n}\n\n\n\nif (inputdata.stampcheck== 'true' || inputdata.stampcheck== true) {\n  inputdata.Surplus = (inputdata.surplusTaxRate / 100).toFixed(4);\n} else {\n  inputdata.Surplus = \"\";\n}\n\nif (inputdata.surpluscheck == 'true' || inputdata.surpluscheck == true) {\n  inputdata.Stamp = (inputdata.stampTaxRate / 100).toFixed(4);\n} else {\n  inputdata.Stamp = \"\";\n}\n\nlet outputData={\n    \"path\": \"07BEFE87-D86F-4932-B65E-5B5415ACF45B\",\n    \"mode\": \"main\",\n    \"name\": inputdata.companyName,\n    \"download\": \"yes\",\n    \"excel_name\": \"ClearforkRater\",\n    \"range_type\": \"cell\",\n    \"output_range\": \"\",\n    \"input_range\": [\n      { index: \"a\", range: \"B1:B5\" },\n      { index: \"b\", range: \"B8:B11\" },\n      { index: \"c\", range: \"B23:B26\" },\n      { index: \"e\", range: \"B16:B16\" },\n      { index: \"f\", range: \"B51:B59\" },\n      { index: \"g\", range: \"B70:B72\" },\n      { index: \"h\", range: \"C70:C71\" },\n      { index: \"i\", range: \"A30:A34\" },\n      { index: \"j\", range: \"C43:C47\" },\n      { index: \"k\", range: \"D86:D86\" },\n      { index: \"l\", range: \"F84:F85\" },\n      { index: \"m\", range: \"F50:F52\" },\n    ],\n    \"input_data\": [\n      {\n        \"index\": \"a\",\n        \"data\": [\n          inputdata.firstName + inputdata.lastName,\n          inputdata.insured_desiredEffectiveDate,\n          inputdata.mcNumber,\n          inputdata.dotNumber,\n          inputdata.numberOfYearsInBusinessQQ\n        ],\n      },\n       {\n        \"index\": \"b\",\n        \"data\": [\n          inputdata.stateInsured,\n          inputdata.autoLiabilityLimit,\n          inputdata.radiusOfOperation,\n          inputdata.vehicleType,\n        ],\n      },\n      {\n        \"index\": \"c\",\n        \"data\": [\n          inputdata.totalIftasMilesField == \"\"? \"1,100,000\" : inputdata.totalIftasMilesField,\n          inputdata.flatbedxl,\n          inputdata.reffreightxl,\n          inputdata.hiredornonowned,\n        ],\n      },      \n      { \n        \"index\": \"e\", \n        \"data\": [\n          totalvehicle\n        ] \n      },\n      {\n        \"index\": \"f\",\n        \"data\": [\n          covdata['Med Pay']!==undefined  ? covdata['Med Pay'] : '', \n          covdata['Uninsured Motorists']!== undefined ? covdata['Uninsured Motorists'] : \"\",\n          covdata[\"Underinsured Motorists\"]!== undefined ?  covdata[\"Underinsured Motorists\"]: 0,\n          covdata[\"Uninsured Motorists Property Damage\"]!== undefined ? covdata[\"Uninsured Motorists Property Damage\"] :0,\n          covdata[\"PIP\"] !== undefined ? covdata[\"PIP\"] : 0,\n          covdata[\"Uninsured Motorists Bodily Injury and Property Damage\"]!==undefined ? covdata[\"Uninsured Motorists Bodily Injury and Property Damage\"]: 0,\n          covdata[\"Uninsured and Underinsured Motorists\"]!==undefined ?covdata[\"Uninsured and Underinsured Motorists\"] : 0,\n          inputdata.gAcsl !== undefined ? inputdata.gAcsl : 0\n        ],\n      },\n      {\n        \"index\": \"g\",\n        \"data\": [\n          inputdata.doYouWantToAddAnAdditionalInsured,\n          inputdata.waiverOfSubrogation,\n          inputdata.blanketAdditionalInsured !== undefined ? inputdata.blanketAdditionalInsured : \"\"\n        ],\n      },\n      { \n        \"index\": \"h\",\n        \"data\": [\n          inputdata.totalInsuredCount!== undefined ? inputdata.totalInsuredCount : \"\", \n          inputdata.wosQty\n        ] \n      },\n      {\n        \"index\": \"i\",\n        \"data\": [\n          inputdata.AccidentYear,\n          inputdata.AccidentYear1,\n          inputdata.AccidentYear2,\n          inputdata.AccidentYear3,\n          inputdata.AccidentYear4,\n        ],\n      },\n      {\n        \"index\": \"j\",\n        \"data\": [\n          inputdata.managementVal !== undefined ? inputdata.managementVal / 100 : \"\",\n          inputdata.employeesVal !== undefined ? inputdata.employeesVal / 100 : \"\",\n          inputdata.equipmentVal !== undefined ? inputdata.equipmentVal / 100 : \"\",\n          inputdata.safetyOrganizationVal !== undefined ? inputdata.safetyOrganizationVal / 100 : \"\",\n          inputdata.experienceRatingVal !== undefined ? inputdata.experienceRatingVal / 100 : \"\"\n        ],\n      },\n      { \n        \"index\": \"k\", \n        \"data\": [\n          inputdata.selectkyMunicipal\n        ] \n      },\n      { \n        \"index\": \"l\", \n        \"data\": [\n          inputdata.Surplus, \n          inputdata.Stamp\n        ] \n      },\n      {\n        \"index\": \"m\", \n        \"data\": [\n          inputdata.limitGeneralLiability,\n          inputdata.deductibleGeneralLiability,\n          inputdata.debitCreitGl !==undefined ? inputdata.debitCreitGl/100 : \"\"\n        ]\n      }\n      \n  ],\n  \"file_name\": inputdata.companyName,\n}\n\nreturn outputData;"
      },
      "id": "6ee8b4fd-7174-487e-9631-0c984753640f",
      "name": "Set excel input data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1580,
        -260
      ]
    },
    {
      "parameters": {
        "jsCode": "let input= $('Get main file details').all()[0].json.data.data;\nlet excelInputData = $('Set excel input data').all()[0].json;\n\nlet coverageData= $('Map coverage data').all().map(i=>i.json);\nlet totalNoVehicles = $('Vehicle Count').all()[0].json.totalVeh ;\n\nlet data = [\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B1\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": input.companyName,\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B2\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[0].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B3\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[0].data[2],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B4\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[0].data[3],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B5\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[0].data[4],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B8\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[1].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B9\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[1].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B10\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[1].data[2],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B11\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": \"Tractor\",\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B16\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": totalNoVehicles,\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B23\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[2].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B24\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[2].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B25\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[2].data[2],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B26\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[2].data[3],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B70\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[5].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B71\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[5].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"B72\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[5].data[2],\n        \"offset\": \"\"\n    },\n\t{\n        \"pageName\": \"Rater\",\n        \"cell\": \"C43\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[8].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"C44\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[8].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"C45\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[8].data[2],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"C46\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[8].data[3],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"C70\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[6].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"C71\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[6].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"D86\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[9].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"F50\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[11].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"F51\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[11].data[1],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"F52\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[11].data[2],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"I84\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[10].data[0],\n        \"offset\": \"\"\n    },\n    {\n        \"pageName\": \"Rater\",\n        \"cell\": \"I85\",\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": excelInputData.input_data[10].data[1],\n        \"offset\": \"\"\n    }\n];\n\nif(typeof(input.selectCoverageSymbol) == \"string\"){\n  input.selectCoverageSymbol = JSON.parse(input.selectCoverageSymbol);\n}\nlet covSymbol = input.selectCoverageSymbol;\nlet indexx =8;\nif(covSymbol.length > 0){\ncovSymbol.forEach(function(item) {\n    let numberPart = item.label.split(\" - \")[0]; // Extract the number part before the hyphen\n    let a = {\n        \"pageName\": \"Rater\",\n        \"cell\": \"F\" + indexx,  // Start with F8 and increment\n        \"key\": \"overDriveId\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": numberPart,   // Set value to the extracted number part\n        \"offset\": \"\"\n    };\n    data.push(a);\n    indexx++; // Increment index for the next entry\n});\n}\n\nif(Object.values(coverageData[0]).length == 0){\n  return {\"data\":JSON.stringify([...data])};\n}else{\n  return {\"data\":JSON.stringify([...data,...coverageData])};\n}"
      },
      "id": "68ede3fe-4fb2-4d7f-adac-2023db9eafc7",
      "name": "Map excel data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        2340,
        -260
      ]
    },
    {
      "parameters": {
        "jsCode": "let input= $('ReadCoverage').all()[0].json.data;\nlet inputdata= $('Get main file details').all()[0].json.data.data;\nif(typeof input == 'string'){\ninput=JSON.parse(input)[\"UMPIP Coverage options by state\"];\n}\nlet statekeys=input[0];\nconsole.log(statekeys);\nlet coverageData = inputdata.coverageData1;\nif(typeof coverageData == 'string'){\n  coverageData = JSON.parse(coverageData)\n}\nconsole.log(coverageData[\"Med Pay\"]);\nlet  statekey=Object.keys(statekeys).find(key => statekeys[key] === inputdata.state);\nconsole.log(statekey);\nlet key=51;\nlet output=[];\n let a={};\nconsole.log(coverageData[\"Med Pay\"]!==undefined);\nif(coverageData[\"Med Pay\"]!==undefined ){\n  a={\n        \"pageName\": \"Rater\",\n        \"cell\": \"B\"+key,\n        \"key\": \"Med Pay\",\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\": coverageData[\"Med Pay\"],\n        \"offset\": \"\"\n    }\n   output.push(a);\n}\n\nfor (let i=1;i<5;i++){\n  a={\"coveragename\":input[i][statekey],\"cellkey\":\"B\"+(key+i)};\n  if(coverageData[input[i][statekey]]!==undefined ){\n    a={\n        \"pageName\": \"Rater\",\n        \"cell\": \"B\"+(key+i),\n        \"key\": input[i][statekey],\n        \"macro\": \"\",\n        \"type\": \"\",\n        \"value\":coverageData[input[i][statekey]],\n        \"offset\": \"\"\n    }\n     output.push(a)\n  }\n \n}\n\nreturn output;"
      },
      "id": "d511bd9f-26b3-4536-ab2c-be7f90284c13",
      "name": "Map coverage data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        2160,
        -260
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "7RpaZ4WrmZbsLigX",
        "options": []
      },
      "id": "5d0bc3ef-c4d1-4afd-9883-3a5dbd30db8f",
      "name": "Excel Mapping",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2700,
        -260
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "apiurl",
              "value": "={{ $node[\"Instance API\"].json[\"apiurl\"] }}/"
            },
            {
              "name": "redirecturl",
              "value": "={{ $node[\"Instance API\"].json[\"redirectURL\"] }}"
            },
            {
              "name": "appid",
              "value": "=700c32f5-0818-4689-ba38-6a43ec45d01c"
            },
            {
              "name": "fileId",
              "value": "={{ $('Webhook').item.json[\"body\"][\"row_uuid\"] }}"
            },
            {
              "name": "environment",
              "value": "=uat"
            },
            {
              "name": "filename",
              "value": "Clearfork_Rater_V11.5.xlsm"
            },
            {
              "name": "token",
              "value": "=Bearer {{$node[\"Generate Token\"].json[\"data\"][\"jwt\"]}}"
            },
            {
              "name": "postURL",
              "value": "https://n8nnew.eoxvantage.com/prod/v1/excelcallback"
            },
            {
              "name": "fieldLabel",
              "value": "ClearforkRater_attachment"
            },
            {
              "name": "endo_date",
              "value": "={{ $node[\"Get difference of endo dates\"].json[\"timeDifference\"][\"days\"] }}"
            }
          ]
        },
        "options": []
      },
      "id": "2882c009-b9cf-4b54-9ee8-2d268e0a6278",
      "name": "Set2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2520,
        -260
      ]
    },
    {
      "parameters": {
        "jsCode": "let excelmapping = $('Excel Mapping').all()[0];\nlet endo_date = $('Get difference of endo dates').all()[0][\"json\"][\"timeDifference\"][\"days\"];\nlet raterData = excelmapping['json'][\"excelresponse\"];\nlet parentFileData = $('Get main file details').all()[0][\"json\"][\"data\"][\"data\"]\nlet attachment;\nlet data = {};\nlet outputdata = {};\nconsole.log(raterData);\noutputdata['totalunit']=raterData.totalunit;\noutputdata['premium_unit']=raterData[\"perunit\"][0][1];\noutputdata['policy_premium']=raterData[\"premium\"][1][1];\noutputdata['sl_tax']=raterData[\"premium\"][3][1];\noutputdata['stamping_tax']=raterData[\"premium\"][4][1];\noutputdata['municipal_tax']=raterData[\"premium\"][5][1];\noutputdata['Gltotal']=raterData[\"GL_Premium\"];\noutputdata['willComplyFee']=raterData[\"premium\"][2][1];\noutputdata['total_premium']=raterData[\"AL_Premium\"];\noutputdata['alPremium'] = raterData[\"AL_Premium\"];\noutputdata['TotalPremium_INCTax'] = raterData[\"Total_premium\"];\noutputdata['TotalPremium_INCTax_perUnit'] = fixedDecimal((parseInt(raterData[\"Total_premium\"])/parseInt(raterData.totalunit)),2);\nlet vehicleno = outputdata.policy_premium / outputdata.premium_unit;\noutputdata['policy_premium_add']=parseInt(raterData['AL_WT']) + parseInt(raterData['GL_WT']);\noutputdata['daily_rate']=fixedDecimal(((parseInt(raterData['Total_premium'])-150)/365),2);\noutputdata['daily_rate_perunit']=fixedDecimal((outputdata.daily_rate/vehicleno),2);\noutputdata['daily_sl_tax'] = fixedDecimal((outputdata.sl_tax / 365),2);\noutputdata['daily_stamping_tax'] = fixedDecimal((outputdata.stamping_tax / 365),2);\noutputdata['daily_municipal_tax'] = 0;\nif (outputdata.municipal_tax > 0) {\n  outputdata['daily_municiple_tax'] = fixedDecimal((outputdata.municipal_tax / 365),2);\n}\noutputdata['billing_type'] = parentFileData.alBillingType;\n\nif (outputdata['billing_type'] == 'autoliability_premium_finance') {\n  let policy_effective_date = parentFileData.insured_desiredEffectiveDate;\n  let endorsement_date = $('Webhook').all()[0].json.body.endtvehicleed;\n  policy_effective_date = dateFormat(policy_effective_date, 1, 0);\n  endorsement_date = dateFormat(endorsement_date, 0, 0);\n  var timeDifferenceInDays = Math.ceil((Math.abs(policy_effective_date - endorsement_date)) / (1000 * 60 * 60 * 24));\n  let annual_power_unit_rate = outputdata.premium_unit;\n  let prorate_factor = (timeDifferenceInDays / 365).toFixed(3);\n  outputdata['daily_policy_premium'] = fixedDecimal(((outputdata[\"TotalPremium_INCTax\"]- 150) * prorate_factor),2);\n  outputdata['daily_policy_premium'] = fixedDecimal(outputdata['daily_policy_premium'],2);\n  outputdata['billing_type'] = 'Premium Financing';\n  outputdata['daily_rate'] = fixedDecimal(outputdata['daily_policy_premium'],2);\n} else {\n  outputdata['daily_policy_premium'] = fixedDecimal(((outputdata.premium_unit / 365) + outputdata['daily_sl_tax'] + outputdata['daily_stamping_tax']),2);\n  outputdata['billing_type'] = 'Daily Rate';\n}\n\nfunction dateFormat(date, year, day) {\n  var expireDate = new Date(date);\n  expireDate.setFullYear(expireDate.getFullYear() + year);\n  expireDate.setDate(expireDate.getDate() - day);\n  return expireDate;\n};\n\nfunction fixedDecimal(input,place) {\n  return parseFloat(input).toFixed(place);\n};\nlet prev_status;\nif(endo_date >= 0){\n  data[\"premium_data\"] = outputdata;\n  data[\"ALRaterSheet_xlsx\"] = [excelmapping['json'][\"attachment\"][\"data\"]];\n  data[\"titeamid\"]=parentFileData[\"titeamid\"];\n  data[\"gettotal\"]=outputdata['total_premium'];\n  data[\"glPremium\"]=outputdata['Gltotal'];\n  data[\"endorsement_status\"]=\"Unbound\";\n // prev_status=$(\"Update Endorsement Details\").all()[0].json[\"previous_status\"];\n}\nelse{\n  data[\"endo_premium_data\"] = outputdata;\n  data[\"endorsement_status\"]=\"Unbound\";\n // prev_status = \"Inactive\";\n}\n\nreturn {data:data,response:outputdata}"
      },
      "id": "a8d74561-5d43-4c81-b664-a93447528fad",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2860,
        -260
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "premiumBearingEndorsements",
        "options": []
      },
      "id": "d8a5a494-7b06-457c-834f-74852879f4b4",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -720,
        -20
      ],
      "webhookId": "090c270f-53fa-4223-9f25-fd4046c5801d"
    },
    {
      "parameters": {
        "url": "={{ $node[\"Set\"].json[\"apiurl\"] }}/app/{{ $node[\"Set\"].json[\"appid\"] }}/file/{{ $('Webhook').item.json[\"body\"][\"row_uuid\"] }}/data",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $node[\"Generate Token\"].json[\"data\"][\"jwt\"] }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": []
          }
        }
      },
      "id": "5d25e515-d6be-404f-a766-be1155361050",
      "name": "Get main file details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        60,
        -20
      ]
    },
    {
      "parameters": {
        "jsCode": "let getTotalVehicleDetails = $('Get Total vehicle').all()[0].json.total;\nlet getMainFileVehDetails = $('Get main file details').all()[0].json.data.data.vehiclenoLength;\nvar totalVehCount = (getTotalVehicleDetails == 0) ? getMainFileVehDetails : getTotalVehicleDetails;\ntotalVehCount = totalVehCount + 1;\n\nconsole.log($('Get main file details').all()[0].json.data);\n\nreturn {\"totalVeh\":totalVehCount}"
      },
      "id": "60a932ae-a88a-49f4-86f0-d08f362d0e95",
      "name": "Vehicle Count",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        -260
      ]
    }
  ],
  "connections": {
    "Set": {
      "main": [
        [
          {
            "node": "Generate Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get User Team": {
      "main": [
        [
          {
            "node": "GetTeamList",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get effective date": {
      "main": [
        [
          {
            "node": "Get difference of endo dates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get todays date": {
      "main": [
        [
          {
            "node": "Get effective date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instance API": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Token": {
      "main": [
        [
          {
            "node": "Get main file details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get difference of endo dates": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Total vehicle": {
      "main": [
        [
          {
            "node": "Vehicle Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "ReadCoverage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ReadCoverage": {
      "main": [
        [
          {
            "node": "Map coverage data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set excel input data": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map excel data": {
      "main": [
        [
          {
            "node": "Set2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map coverage data": {
      "main": [
        [
          {
            "node": "Map excel data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Excel Mapping": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set2": {
      "main": [
        [
          {
            "node": "Excel Mapping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get Total vehicle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Instance API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get main file details": {
      "main": [
        [
          {
            "node": "Get todays date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vehicle Count": {
      "main": [
        [
          {
            "node": "Set excel input data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": null,
  "versionId": "0cfab9cb-2b4c-4d23-83ff-6d467a94cbc8",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-07-17T06:13:15.904Z",
      "updatedAt": "2025-07-17T06:13:15.904Z",
      "id": "HBDaN74XjE6uM179",
      "name": "triumph"
    }
  ]
}